{"version":3,"sources":["reducers/dogs.js","actions/actionTypes.js","reducers/user.js","reducers/game.js","reducers/index.js","pages/main/Main.jsx","components/baseSelect/BaseSelect.jsx","components/settingsForm/SettingsForm.jsx","actions/game.js","actions/user.js","containers/SettingsFormContainer.jsx","pages/settings/Settings.jsx","components/game/Game.jsx","helpers/defineUrl.js","components/game/gameHelper.js","api/fetchGetData.js","actions/dogs.js","components/game/gameCreator.js","components/game/gameMove.js","containers/GameContainer.jsx","components/router/AppRouter.jsx","components/navigationPanel/NavigationPanel.jsx","App.jsx","containers/Root.jsx","index.js"],"names":["initialState","list","loading","error","dogs","state","arguments","length","undefined","action","type","Object","objectSpread","result","name","user","size","complexity","source","score","selectedDogs","game","activeDogs","filter","el","isActive","newSource","toConsumableArray","forEach","id","newInActiveDogs","allReducers","combineReducers","Main","react_default","a","createElement","BaseSelect","props","value","handleChange","options","labelName","optionList","map","className","key","concat","text","htmlFor","onChange","defaultProps","SettingsForm","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","event","setState","defineProperty","target","handleSubmit","_this$state","_this$props","changeSettings","changeName","preventDefault","textInput","React","createRef","_this$props2","current","focus","_this$state2","onSubmit","autoComplete","placeholder","ref","BaseSelect_BaseSelect","sizeOptions","complexityOptions","PureComponent","createGameSuccess","changeGameSettings","nextMoveGame","setUserName","connect","dispatch","components_settingsForm_SettingsForm","Settings","containers_SettingsFormContainer","Component","Game","createGame","selectDog","boxElem","index","dogClass","classNames","Game__boxElem_inactive","Game__boxElem_selected","some","dog","image","toString","role","onClick","onKeyUp","tabIndex","src","alt","breed","defineUrl","_ref","exactly","amount","Error","randomInteger","max","random","Math","floor","createRandomBreeds","arr","randomArr","Array","pow","fill","randomIndex","push","createGameQuery","arrBreeds","createRandomSource","flatMap","message","img","shuffleSource","i","randomInd","fetchGetData","url","fetch","then","resp","status","Promise","reject","statusText","json","getDogsLoading","query","getDogsSuccess","getDogsFail","fetchDogs","catch","err","console","log","asyncToGenerator","regenerator_default","mark","_callee","breeds","gameBreeds","gameQuery","urls","shuffleResult","wrap","_context","prev","next","keys","sent","all","assign","t0","stop","_x","apply","gameMove","dog0","currentRound","dogsOneBreed","newSelectedDogs","diffScore","newScore","GameContainer","components_game_Game","mapDispatchToProps","getState","store","_store$game","fetchDogsList","AppRouter","Switch","Route","path","exact","component","NavigationPanel","linksList","links","link","Link","to","App","NavigationPanel_NavigationPanel","router_AppRouter","Root","react_redux_es","BrowserRouter","basename","createStore","applyMiddleware","thunk","logger","ReactDOM","render","containers_Root","document","getElementById"],"mappings":"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","file":"static/js/main.d8764481.chunk.js","sourcesContent":["import * as types from \"../actions/actionTypes\";\r\n\r\nconst initialState = {\r\n  list: {},\r\n  loading: false,\r\n  error: null\r\n};\r\n\r\nconst dogs = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case types.GET_DOGS_LOADING:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n        error: null\r\n      };\r\n    case types.GET_DOGS_SUCCESS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        list: action.result\r\n      };\r\n    case types.GET_DOGS_FAIL:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        error: action.error\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default dogs;\r\n","export const GET_DOGS_LOADING = \"GET_DOGS_LOADING\";\r\nexport const GET_DOGS_SUCCESS = \"GET_DOGS_SUCCESS\";\r\nexport const GET_DOGS_FAIL = \"GET_DOGS_FAIL\";\r\nexport const SET_USER_NAME = \"SET_USER_NAME\";\r\nexport const CREATE_NEW_GAME = \"CREATE_NEW_GAME\";\r\nexport const CREATE_GAME_SUCCESS = \"CREATE_GAME_SUCCESS\";\r\nexport const CREATE_GAME_FAIL = \"CREATE_GAME_FAIL\";\r\nexport const CHANGE_GAME_SETTINGS = \"CHANGE_GAME_SETTINGS\";\r\nexport const FINISH_GAME = \"FINISH_GAME\";\r\nexport const NEXT_MOVE_GAME = \"NEXT_MOVE_GAME\";\r\n","import * as types from \"../actions/actionTypes\";\r\n\r\nconst initialState = {\r\n  name: \"\"\r\n};\r\nconst user = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case types.SET_USER_NAME:\r\n      return {\r\n        ...state,\r\n        name: action.name\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default user;\r\n","import * as types from \"../actions/actionTypes\";\r\n\r\nconst initialState = {\r\n  size: 4,\r\n  complexity: 2,\r\n  loading: false,\r\n  error: null,\r\n  source: [],\r\n  score: 0,\r\n  selectedDogs: []\r\n};\r\n\r\nconst game = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case types.CREATE_NEW_GAME:\r\n      return {\r\n        ...state,\r\n        source: [],\r\n        selectedDogs: [],\r\n        loading: true,\r\n        error: null\r\n      };\r\n    case types.CREATE_GAME_SUCCESS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        source: action.result\r\n      };\r\n    case types.CREATE_GAME_FAIL:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        error: action.error\r\n      };\r\n    case types.FINISH_GAME: {\r\n      const activeDogs = state.source.filter(el => el.isActive);\r\n      const newSource = [...state.source];\r\n      activeDogs.forEach(el => {\r\n        newSource[el.id].isActive = false;\r\n      });\r\n      return {\r\n        ...state,\r\n        score: action.score,\r\n        source: newSource,\r\n        selectedDogs: []\r\n      };\r\n    }\r\n    case types.CHANGE_GAME_SETTINGS:\r\n      return {\r\n        ...state,\r\n        size: action.size,\r\n        complexity: action.complexity\r\n      };\r\n    case types.NEXT_MOVE_GAME: {\r\n      const newSource = [...state.source];\r\n      action.newInActiveDogs.forEach(el => {\r\n        newSource[el.id] = el;\r\n      });\r\n      return {\r\n        ...state,\r\n        source: newSource,\r\n        selectedDogs: action.selectedDogs,\r\n        score: action.score\r\n      };\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default game;\r\n","import { combineReducers } from \"redux\";\r\nimport dogs from \"./dogs\";\r\nimport user from \"./user\";\r\nimport game from \"./game\";\r\n\r\nconst allReducers = combineReducers({\r\n  dogs,\r\n  user,\r\n  game\r\n});\r\n\r\nexport default allReducers;\r\n","import React from \"react\";\r\n\r\nconst Main = () => <div>Hello</div>;\r\n\r\nexport default Main;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"./BaseSelect.css\";\r\n\r\nexport default function BaseSelect(props) {\r\n  const { name, value, handleChange, options, labelName } = props;\r\n  const optionList = options.map(el => (\r\n    <option\r\n      className=\"BaseSelect__option\"\r\n      value={el.value}\r\n      key={`${el.value}${name}`}\r\n    >\r\n      {el.text}\r\n    </option>\r\n  ));\r\n\r\n  return (\r\n    <label className=\"BaseSelect\" htmlFor={name}>\r\n      <span className=\"BaseSelect__description\">{labelName}</span>\r\n      <select\r\n        className=\"BaseSelect__select\"\r\n        name={name}\r\n        value={value}\r\n        onChange={handleChange}\r\n      >\r\n        {optionList}\r\n      </select>\r\n    </label>\r\n  );\r\n}\r\nBaseSelect.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  value: PropTypes.number.isRequired,\r\n  handleChange: PropTypes.func.isRequired,\r\n  options: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      value: PropTypes.number,\r\n      text: PropTypes.string\r\n    })\r\n  ).isRequired,\r\n  labelName: PropTypes.string\r\n};\r\nBaseSelect.defaultProps = {\r\n  labelName: \"\"\r\n};\r\n","import React, { PureComponent } from \"react\";\r\nimport \"./SettingsForm.css\";\r\nimport PropTypes from \"prop-types\";\r\nimport BaseSelect from \"../baseSelect/BaseSelect\";\r\nimport { sizeOptions, complexityOptions } from \"./suggestedOptions.json\";\r\n\r\nclass SettingsForm extends PureComponent {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      name: \"\",\r\n      size: 4,\r\n      complexity: 2\r\n    };\r\n    this.textInput = React.createRef();\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { name, size, complexity } = this.props;\r\n    this.setState({\r\n      name,\r\n      size,\r\n      complexity\r\n    });\r\n    if (name === \"\") {\r\n      this.textInput.current.focus();\r\n    }\r\n  }\r\n\r\n  handleChange = event =>\r\n    this.setState({ [event.target.name]: event.target.value });\r\n\r\n  handleSubmit = event => {\r\n    const { name, size, complexity } = this.state;\r\n    const { changeSettings, changeName } = this.props;\r\n    changeSettings(+size, +complexity);\r\n    changeName(name);\r\n    event.preventDefault();\r\n  };\r\n\r\n  render() {\r\n    const { name, size, complexity } = this.state;\r\n\r\n    return (\r\n      <form onSubmit={this.handleSubmit} className=\"SettingsForm\">\r\n        <h3>Preferences</h3>\r\n\r\n        <label className=\"SettingsForm__preferencesElement\" htmlFor=\"name\">\r\n          <span className=\"SettingsForm__description\">name: </span>\r\n          <input\r\n            className=\"SettingsForm__input\"\r\n            autoComplete=\"off\"\r\n            type=\"text\"\r\n            name=\"name\"\r\n            placeholder=\"your name\"\r\n            value={name}\r\n            onChange={this.handleChange}\r\n            ref={this.textInput}\r\n          />\r\n        </label>\r\n        <BaseSelect\r\n          name=\"size\"\r\n          value={+size}\r\n          handleChange={this.handleChange}\r\n          options={sizeOptions}\r\n          labelName=\"size:\"\r\n        />\r\n        <BaseSelect\r\n          name=\"complexity\"\r\n          value={+complexity}\r\n          handleChange={this.handleChange}\r\n          options={complexityOptions}\r\n          labelName=\"complexity:\"\r\n        />\r\n        <div>\r\n          <input value=\"Apply\" className=\"SettingsForm__button\" type=\"submit\" />\r\n        </div>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nSettingsForm.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  size: PropTypes.number.isRequired,\r\n  complexity: PropTypes.number.isRequired,\r\n  changeSettings: PropTypes.func.isRequired,\r\n  changeName: PropTypes.func.isRequired\r\n};\r\n\r\nexport default SettingsForm;\r\n","import * as types from \"./actionTypes\";\r\n\r\nexport const createNewGame = () => ({\r\n  type: types.CREATE_NEW_GAME\r\n});\r\n\r\nexport const createGameSuccess = result => ({\r\n  type: types.CREATE_GAME_SUCCESS,\r\n  result\r\n});\r\n\r\nexport const createGameFail = error => ({\r\n  type: types.CREATE_GAME_FAIL,\r\n  error\r\n});\r\n\r\nexport const finishGame = score => ({\r\n  type: types.FINISH_GAME,\r\n  score\r\n});\r\n\r\nexport const changeGameSettings = (size, complexity) => ({\r\n  type: types.CHANGE_GAME_SETTINGS,\r\n  size,\r\n  complexity\r\n});\r\n\r\nexport const nextMoveGame = (selectedDogs, newInActiveDogs, score) => ({\r\n  type: types.NEXT_MOVE_GAME,\r\n  selectedDogs,\r\n  newInActiveDogs,\r\n  score\r\n});\r\n","import * as types from \"./actionTypes\";\r\n\r\nconst setUserName = name => ({\r\n  type: types.SET_USER_NAME,\r\n  name\r\n});\r\n\r\nexport default setUserName;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport SettingsForm from \"../components/settingsForm/SettingsForm\";\r\nimport { changeGameSettings } from \"../actions/game\";\r\nimport setUserName from \"../actions/user\";\r\n\r\nconst SettingsFormContainer = props => <SettingsForm {...props} />;\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    changeSettings: (size, complexity) =>\r\n      dispatch(changeGameSettings(size, complexity)),\r\n    changeName: name => dispatch(setUserName(name))\r\n  };\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  size: state.game.size,\r\n  complexity: state.game.complexity,\r\n  name: state.user.name\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(SettingsFormContainer);\r\n","import React, { Component } from \"react\";\r\nimport \"./Settings.css\";\r\nimport SettingsFormContainer from \"../../containers/SettingsFormContainer\";\r\n\r\nclass Settings extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"Settings\">\r\n        <SettingsFormContainer />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Settings;\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"./Game.css\";\r\nimport classNames from \"classnames\";\r\n\r\nclass Game extends Component {\r\n  componentDidMount() {\r\n    const { createGame } = this.props;\r\n    createGame();\r\n  }\r\n\r\n  render() {\r\n    const { source, selectDog, selectedDogs, score, createGame } = this.props;\r\n    const boxElem = source.map((el, index) => {\r\n      const dogClass = classNames(\"Game__boxElem\", {\r\n        Game__boxElem_inactive: !el.isActive,\r\n        Game__boxElem_selected:\r\n          selectedDogs.length !== 0 &&\r\n          selectedDogs.some(dog => dog.id === el.id)\r\n      });\r\n      return (\r\n        <div\r\n          key={`${el.image}_${index.toString()}`}\r\n          className={dogClass}\r\n          role=\"button\"\r\n          onClick={() => selectDog(el)}\r\n          onKeyUp={() => {}}\r\n          tabIndex=\"-1\"\r\n        >\r\n          <img className=\"Game__boxImage\" src={el.image} alt=\"dog\" />\r\n        </div>\r\n      );\r\n    });\r\n\r\n    return (\r\n      <div className=\"Game\">\r\n        <div className=\"Game__moveDescription\">\r\n          <p>Find dogs of the same breed</p>\r\n          <p>\r\n            <span className=\"Game__description\">breed: </span>\r\n            {selectedDogs.length !== 0 ? selectedDogs[0].breed : \"\"}\r\n          </p>\r\n          <p>\r\n            <span className=\"Game__description\">score: </span>\r\n            {score}\r\n          </p>\r\n          <div className=\"Game__navigation\">\r\n            <button\r\n              type=\"button\"\r\n              className=\"Game__buttonNew\"\r\n              onClick={createGame}\r\n            >\r\n              New game\r\n            </button>\r\n          </div>\r\n        </div>\r\n        <div className=\"Game__area\">{boxElem}</div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nGame.propTypes = {\r\n  createGame: PropTypes.func.isRequired,\r\n  selectDog: PropTypes.func.isRequired,\r\n  selectedDogs: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n  source: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      breed: PropTypes.string,\r\n      image: PropTypes.string\r\n    })\r\n  ).isRequired,\r\n  score: PropTypes.number.isRequired\r\n};\r\n\r\nexport default Game;\r\n","export default function defineUrl({ source, exactly, amount }) {\r\n  if (source === \"list\") {\r\n    return \"https://dog.ceo/api/breeds/list/all\";\r\n  }\r\n  if (source === \"breed\" || source === \"subBreed\") {\r\n    return `https://dog.ceo/api/breed/${exactly}/images`;\r\n  }\r\n  if (source === \"random\") {\r\n    return `https://dog.ceo/api/breeds/image/random/${amount}`;\r\n  }\r\n  if (source === \"breedRandom\" || source === \"subBreedRandom\") {\r\n    return `https://dog.ceo/api/breed/${exactly}/images/random/${amount}`;\r\n  }\r\n  throw new Error(`unknown source type: ${source} `);\r\n}\r\n","const randomInteger = max => {\r\n  let random = Math.random() * max;\r\n  random = Math.floor(random);\r\n  return random;\r\n};\r\n\r\nexport const createRandomBreeds = (size, arr, complexity) => {\r\n  const randomArr = new Array(size ** 2 / complexity).fill(true);\r\n  const result = [];\r\n  randomArr.forEach(() => {\r\n    const randomIndex = randomInteger(arr.length);\r\n    result.push(arr[randomIndex]);\r\n  });\r\n\r\n  return result;\r\n};\r\n\r\nexport const createGameQuery = (arrBreeds, complexity) => {\r\n  const query = arrBreeds.map(breed => {\r\n    const params = {\r\n      source: \"breedRandom\",\r\n      exactly: breed,\r\n      amount: complexity\r\n    };\r\n    return params;\r\n  });\r\n  return query;\r\n};\r\n\r\nexport const createRandomSource = arr =>\r\n  arr.flatMap(el => el.message.map(img => ({ breed: el.exactly, image: img })));\r\n\r\nexport const shuffleSource = arr => {\r\n  const result = arr;\r\n  if (arr !== undefined) {\r\n    for (let i = 0; i < result.length; i += 1) {\r\n      const el = result[i];\r\n      const randomInd = randomInteger(result.length);\r\n      result[i] = result[randomInd];\r\n      result[randomInd] = el;\r\n    }\r\n    for (let i = 0; i < result.length; i += 1) {\r\n      result[i].id = i;\r\n      result[i].isActive = true;\r\n    }\r\n  }\r\n  return result;\r\n};\r\n","export default function fetchGetData(url) {\r\n  return fetch(url).then(resp => {\r\n    if (resp.status !== 200) {\r\n      Promise.reject(new Error(resp.statusText));\r\n    }\r\n    return resp.json();\r\n  });\r\n}\r\n","import * as types from \"./actionTypes\";\r\nimport fetchGetData from \"../api/fetchGetData\";\r\nimport defineUrl from \"../helpers/defineUrl\";\r\n\r\nexport const getDogsLoading = query => ({\r\n  type: types.GET_DOGS_LOADING,\r\n  query\r\n});\r\n\r\nexport const getDogsSuccess = (query, result) => ({\r\n  type: types.GET_DOGS_SUCCESS,\r\n  query,\r\n  result\r\n});\r\n\r\nexport const getDogsFail = error => ({\r\n  type: types.GET_DOGS_FAIL,\r\n  error\r\n});\r\n\r\nexport function fetchDogs(query) {\r\n  return dispatch => {\r\n    dispatch(getDogsLoading(query));\r\n    return fetchGetData(defineUrl(query))\r\n      .then(result => {\r\n        dispatch(getDogsSuccess(query, result.message));\r\n        return result.message;\r\n      })\r\n      .catch(err => {\r\n        // eslint-disable-next-line\r\n        console.log(\"err\", err);\r\n        dispatch(getDogsFail(err));\r\n        return [];\r\n      });\r\n  };\r\n}\r\n","import defineUrl from \"../../helpers/defineUrl\";\r\nimport {\r\n  createRandomBreeds,\r\n  createGameQuery,\r\n  createRandomSource,\r\n  shuffleSource\r\n} from \"./gameHelper\";\r\nimport {\r\n  createNewGame,\r\n  createGameSuccess,\r\n  createGameFail\r\n} from \"../../actions/game\";\r\nimport { fetchDogs } from \"../../actions/dogs\";\r\nimport fetchGetData from \"../../api/fetchGetData\";\r\n\r\nconst createGame = (list, size, complexity) => async dispatch => {\r\n  let breeds = list;\r\n  try {\r\n    if (Object.keys(list).length === 0) {\r\n      breeds = await dispatch(\r\n        fetchDogs({\r\n          source: \"list\",\r\n          exactly: \"\",\r\n          amount: null\r\n        })\r\n      );\r\n      if (breeds.length === 0) {\r\n        throw new Error(\"no breeds found\");\r\n      }\r\n    }\r\n    dispatch(createNewGame());\r\n    const gameBreeds = createRandomBreeds(\r\n      size,\r\n      Object.keys(breeds),\r\n      complexity\r\n    );\r\n    const gameQuery = createGameQuery(gameBreeds, complexity);\r\n    const urls = gameQuery.map(query => defineUrl(query));\r\n\r\n    const arr = await Promise.all(\r\n      urls.map(url => {\r\n        const message = fetchGetData(url)\r\n          .then(result => result)\r\n          .catch(error => {\r\n            // eslint-disable-next-line\r\n            console.log(\"error\", error);\r\n          });\r\n        return message;\r\n      })\r\n    );\r\n    arr.forEach((el, index) => {\r\n      Object.assign(gameQuery[index], el);\r\n    });\r\n    const result = createRandomSource(gameQuery);\r\n    const shuffleResult = shuffleSource(result);\r\n    dispatch(createGameSuccess(shuffleResult));\r\n  } catch (error) {\r\n    dispatch(createGameFail(error));\r\n  }\r\n};\r\n\r\nexport default createGame;\r\n","import { nextMoveGame, finishGame } from \"../../actions/game\";\r\n\r\nconst gameMove = (dog, game) => dispatch => {\r\n  if (game.selectedDogs.length === 0) {\r\n    const newSelectedDogs = [dog];\r\n    return dispatch(nextMoveGame(newSelectedDogs, [], game.score));\r\n  }\r\n\r\n  const dog0 = game.selectedDogs[0];\r\n  const isMatch =\r\n    dog.breed === dog0.breed &&\r\n    game.selectedDogs.filter(el => el.id === dog.id).length === 0;\r\n  if (!isMatch) {\r\n    return dispatch(nextMoveGame([], [], game.score));\r\n  }\r\n  const currentRound = game.selectedDogs.length + 1 < game.complexity;\r\n  const dogsOneBreed = game.selectedDogs.concat(dog);\r\n  const newSelectedDogs = currentRound ? dogsOneBreed : [];\r\n  let newInActiveDogs = currentRound ? [] : dogsOneBreed;\r\n  let diffScore = 0;\r\n  if (newInActiveDogs.length !== 0) {\r\n    newInActiveDogs = newInActiveDogs.map(el => ({ ...el, isActive: false }));\r\n    diffScore = game.complexity;\r\n  }\r\n  const newScore = game.score + diffScore;\r\n  const isGameOver = game.source.filter(el => el.isActive).length === 0;\r\n  if (isGameOver) {\r\n    return dispatch(finishGame(newScore));\r\n  }\r\n  return dispatch(nextMoveGame(newSelectedDogs, newInActiveDogs, newScore));\r\n};\r\nexport default gameMove;\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Game from \"../components/game/Game\";\r\nimport createGame from \"../components/game/gameCreator\";\r\nimport gameMove from \"../components/game/gameMove\";\r\nimport { fetchDogs } from \"../actions/dogs\";\r\n\r\nclass GameContainer extends Component {\r\n  render() {\r\n    return <Game {...this.props} />;\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  createGame: () => (dispatch, getState) => {\r\n    const store = getState();\r\n    const { list } = store.dogs;\r\n    const { size, complexity } = store.game;\r\n    dispatch(createGame(list, size, complexity));\r\n  },\r\n  selectDog: dog => (dispatch, getState) => {\r\n    const store = getState();\r\n    const { game } = store;\r\n    dispatch(gameMove(dog, game));\r\n  },\r\n  fetchDogsList: query => dispatch => dispatch(fetchDogs(query))\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  list: state.dogs.list,\r\n  size: state.game.size,\r\n  complexity: state.game.complexity,\r\n  score: state.game.score,\r\n  source: state.game.source,\r\n  selectedDogs: state.game.selectedDogs\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(GameContainer);\r\n","import React from \"react\";\r\nimport { Switch, Route } from \"react-router-dom\";\r\nimport Main from \"../../pages/main/Main\";\r\nimport Settings from \"../../pages/settings/Settings\";\r\nimport GameContainer from \"../../containers/GameContainer\";\r\n\r\nconst AppRouter = () => (\r\n  <Switch>\r\n    <Route path=\"/game\" exact component={GameContainer} />\r\n    <Route path=\"/settings\" component={Settings} />\r\n    <Route path=\"/\" exact component={Main} />\r\n  </Switch>\r\n);\r\nexport default AppRouter;\r\n","import React from \"react\";\r\nimport \"./NavigationPanel.css\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport default function NavigationPanel({ links }) {\r\n  const linksList = links.map(link => (\r\n    <li className=\"NavigationPanel__item\" key={`${link.path}`}>\r\n      <Link className=\"NavigationPanel__link\" to={link.path}>\r\n        {link.name}\r\n      </Link>\r\n    </li>\r\n  ));\r\n  return (\r\n    <nav className=\"NavigationPanel\">\r\n      <ul className=\"NavigationPanel__list\">{linksList}</ul>\r\n    </nav>\r\n  );\r\n}\r\nNavigationPanel.propTypes = {\r\n  links: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      path: PropTypes.string,\r\n      name: PropTypes.string\r\n    })\r\n  ).isRequired\r\n};\r\n","import React from \"react\";\r\nimport \"./App.css\";\r\nimport AppRouter from \"./components/router/AppRouter\";\r\nimport NavigationPanel from \"./components/navigationPanel/NavigationPanel\";\r\nimport { links } from \"./components/navigationPanel/navigationRoutes.json\";\r\n\r\nexport default function App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <header className=\"App__header\">\r\n        <NavigationPanel links={links} />\r\n      </header>\r\n      <main className=\"App__main\">\r\n        <AppRouter />\r\n      </main>\r\n      <footer className=\"App__footer\" />\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Provider } from \"react-redux\";\r\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\r\n\r\nimport App from \"../App\";\r\n\r\nconst Root = ({ store }) => (\r\n  <Provider store={store}>\r\n    <Router basename=\"/DogExpert\">\r\n      <Route path=\"/\" component={App} />\r\n    </Router>\r\n  </Provider>\r\n);\r\n\r\nRoot.propTypes = {\r\n  store: PropTypes.shape({\r\n    dogs: PropTypes.any,\r\n    game: PropTypes.any,\r\n    user: PropTypes.any\r\n  }).isRequired\r\n};\r\n\r\nexport default Root;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { createStore, applyMiddleware } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport logger from \"redux-logger\";\r\nimport allReducers from \"./reducers\";\r\nimport \"./index.css\";\r\nimport Root from \"./containers/Root\";\r\n\r\nconst store = createStore(allReducers, applyMiddleware(thunk, logger));\r\n\r\nReactDOM.render(<Root store={store} />, document.getElementById(\"root\"));\r\n\r\nexport default store;\r\n"],"sourceRoot":""}