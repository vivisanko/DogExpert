{"version":3,"sources":["components/navigationPanel/navigationRoutes.js","reducers/dogs.js","actions/actionTypes.js","reducers/user.js","reducers/game.js","reducers/index.js","helpers/defineUrl.js","actions/dogs.js","pages/main/Main.jsx","components/baseSelect/BaseSelect.jsx","components/settingsForm/suggestedOptions.js","components/settingsForm/SettingsForm.jsx","pages/settings/Settings.jsx","components/game/Game.jsx","components/game/gameHelper.js","actions/game.js","components/game/gameCreator.js","components/game/gameMove.js","containers/GameContainer.jsx","components/router/AppRouter.jsx","components/navigationPanel/NavigationPanel.jsx","App.jsx","containers/Root.jsx","index.js"],"names":["module","exports","links","path","name","initialState","list","loading","error","dogs","state","arguments","length","undefined","action","type","Object","objectSpread","result","user","size","source","score","selectedDogs","game","activeDogs","filter","el","isActive","newSource","slice","forEach","id","newInActiveDogs","allReducers","combineReducers","urlDictionary","exactly","amount","dictionary","sourceApi","breed","concat","subBreed","random","breedRandom","subBreedRandom","keys","map","key","defineUrl","_ref","getDogsBegin","query","getDogsSuccess","getDogsFail","Main","react_default","a","createElement","BaseSelect","props","value","handleChange","options","labelName","optionList","text","className","htmlFor","onChange","defaultProps","sizeOptions","complexityOptions","SettingsForm","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","event","setState","defineProperty","target","handleSubmit","console","log","complexity","_this2","_this$state","placeholder","BaseSelect_BaseSelect","onClick","Component","Settings","components_settingsForm_SettingsForm","Game","createNewGame","_this$props","createGame","_this$props2","selectDog","boxElem","index","dogClass","classNames","Game__boxElem_inactive","Game__boxElem_selected","image","toString","role","onKeyUp","tabIndex","src","alt","randomInteger","max","Math","floor","createRandomBreeds","arr","randomArr","Array","pow","fill","randomIndex","push","createRandomSource","flatMap","message","img","shuffleSource","i","randomInd","createGameSuccess","nextMoveGame","asyncToGenerator","regenerator_default","mark","_callee","dispatch","gameBreeds","gameQuery","urls","shuffleResult","wrap","_context","prev","next","Promise","all","url","fetch","then","resp","json","catch","sent","assign","t0","stop","_x","apply","gameMove","dog","dog0","newDog0","newDog","newScore","connect","components_game_Game","AppRouter","Switch","Route","exact","component","GameContainer","NavigationPanel","linksList","link","Link","to","App","NavigationPanel_NavigationPanel","router_AppRouter","Root","store","err","react_redux_es","BrowserRouter","createStore","applyMiddleware","thunk","logger","ReactDOM","render","containers_Root","document","getElementById"],"mappings":"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","file":"static/js/main.b455eff4.chunk.js","sourcesContent":["module.exports = {\r\n  links: [\r\n    { path: \"/\", name: \"to main page\" },\r\n    { path: \"/settings\", name: \"to settings page\" },\r\n    { path: \"/game\", name: \"to game\" }\r\n  ]\r\n};\r\n","import * as types from \"../actions/actionTypes\";\r\n\r\n// const initialState = {\r\n//   list: {},\r\n//   breedsCollection: {},\r\n//   subBreedCollection: {}\r\n// };\r\nconst initialState = {\r\n  list: {},\r\n  loading: false,\r\n  error: null\r\n};\r\n\r\nconst dogs = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case types.GET_DOGS_BEGIN:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n        error: null\r\n      };\r\n    case types.GET_DOGS_SUCCESS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        list: action.result\r\n      };\r\n    case types.GET_DOGS_FAIL:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        error: action.error\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default dogs;\r\n","export const GET_DOGS_BEGIN = \"GET_DOGS_BEGIN\";\r\nexport const GET_DOGS_SUCCESS = \"GET_DOGS_SUCCESS\";\r\nexport const GET_DOGS_FAIL = \"GET_DOGS_FAIL\";\r\nexport const SET_USER_NAME = \"SET_USER_NAME\";\r\nexport const CREATE_NEW_GAME = \"CREATE_NEW_GAME\";\r\nexport const CREATE_GAME_SUCCESS = \"CREATE_GAME_SUCCESS\";\r\nexport const CREATE_GAME_FAIL = \"CREATE_GAME_FAIL\";\r\nexport const FINISH_GAME = \"FINISH_GAME\";\r\nexport const NEXT_MOVE_GAME = \"NEXT_MOVE_GAME\";\r\n","import * as types from \"../actions/actionTypes\";\r\n\r\nconst initialState = {\r\n  name: \"guest\"\r\n};\r\nconst user = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case types.SET_USER_NAME:\r\n      return {\r\n        ...state,\r\n        name: action.name\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default user;\r\n","import * as types from \"../actions/actionTypes\";\r\n\r\nconst initialState = {\r\n  size: 4,\r\n  loading: false,\r\n  error: null,\r\n  source: [],\r\n  score: 0,\r\n  selectedDogs: []\r\n};\r\n\r\nconst game = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case types.CREATE_NEW_GAME:\r\n      return {\r\n        ...state,\r\n        source: [],\r\n        loading: true,\r\n        error: null\r\n      };\r\n    case types.CREATE_GAME_SUCCESS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        source: action.result\r\n      };\r\n    case types.CREATE_GAME_FAIL:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        error: action.error\r\n      };\r\n    case types.FINISH_GAME: {\r\n      const activeDogs = state.source.filter(el => el.isActive);\r\n      const newSource = state.source.slice();\r\n      activeDogs.forEach(el => {\r\n        newSource[el.id].isActive = false;\r\n      });\r\n      return {\r\n        ...state,\r\n        score: action.score,\r\n        source: newSource,\r\n        selectedDogs: []\r\n      };\r\n    }\r\n    case types.NEXT_MOVE_GAME: {\r\n      const newSource = state.source.slice();\r\n      action.newInActiveDogs.forEach(el => {\r\n        newSource[el.id] = el;\r\n      });\r\n      return {\r\n        ...state,\r\n        source: newSource,\r\n        selectedDogs: action.selectedDogs,\r\n        score: action.score\r\n      };\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default game;\r\n","import { combineReducers } from \"redux\";\r\nimport dogs from \"./dogs\";\r\nimport user from \"./user\";\r\nimport game from \"./game\";\r\n\r\nconst allReducers = combineReducers({\r\n  dogs,\r\n  user,\r\n  game\r\n});\r\n\r\nexport default allReducers;\r\n","export const urlDictionary = (exactly, amount) => {\r\n  const dictionary = {};\r\n  const sourceApi = {\r\n    list: \"https://dog.ceo/api/breeds/list/all\",\r\n    breed: `https://dog.ceo/api/breed/${exactly}/images`,\r\n    subBreed: `https://dog.ceo/api/breed/${exactly}/images`,\r\n    random: `https://dog.ceo/api/breeds/image/random/${amount}`,\r\n    breedRandom: `https://dog.ceo/api/breed/${exactly}/images/random/${amount}`,\r\n    subBreedRandom: `https://dog.ceo/api/breed/${exactly}/images/random/${amount}`\r\n  };\r\n  Object.keys(sourceApi).map(key => {\r\n    dictionary[key] = sourceApi[key];\r\n    return dictionary;\r\n  });\r\n  return dictionary;\r\n};\r\n\r\nexport function defineUrl({ source, exactly, amount }) {\r\n  const url = urlDictionary(exactly, amount);\r\n  return url[source];\r\n}\r\n","import * as types from \"./actionTypes\";\r\nimport { defineUrl } from \"../helpers/defineUrl\";\r\n\r\nexport const getDogsBegin = query => ({\r\n  type: types.GET_DOGS_BEGIN,\r\n  query\r\n});\r\n\r\nexport const getDogsSuccess = (query, result) => ({\r\n  type: types.GET_DOGS_SUCCESS,\r\n  query,\r\n  result\r\n});\r\n\r\nexport const getDogsFail = error => ({\r\n  type: types.GET_DOGS_FAIL,\r\n  error\r\n});\r\n\r\nexport function fetchDogs(query) {\r\n  return dispatch => {\r\n    dispatch(getDogsBegin(query));\r\n    return fetch(defineUrl(query))\r\n      .then(resp => resp.json())\r\n      .then(result => dispatch(getDogsSuccess(query, result.message)))\r\n      .catch(err => {\r\n        // eslint-disable-next-line\r\n        console.log(\"err\", err);\r\n        return dispatch(getDogsFail(err));\r\n      });\r\n  };\r\n}\r\n","import React from \"react\";\r\n\r\nconst Main = () => <div>Главная</div>;\r\n\r\nexport default Main;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"./BaseSelect.css\";\r\n\r\nexport default function BaseSelect(props) {\r\n  const { id, value, handleChange, options, labelName } = props;\r\n  const optionList = options.map(el => (\r\n    <option value={el.value} key={`${el.value}${id}`}>\r\n      {el.text}\r\n    </option>\r\n  ));\r\n\r\n  return (\r\n    <label className=\"BaseSelect\" htmlFor={id}>\r\n      <span>{labelName}</span>\r\n      <select\r\n        className=\"BaseSelect__options\"\r\n        id={id}\r\n        value={value}\r\n        onChange={handleChange}\r\n      >\r\n        {optionList}\r\n      </select>\r\n    </label>\r\n  );\r\n}\r\nBaseSelect.propTypes = {\r\n  id: PropTypes.string.isRequired,\r\n  value: PropTypes.number.isRequired,\r\n  handleChange: PropTypes.func.isRequired,\r\n  options: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      value: PropTypes.number,\r\n      text: PropTypes.string\r\n    })\r\n  ).isRequired,\r\n  labelName: PropTypes.string\r\n};\r\nBaseSelect.defaultProps = {\r\n  labelName: \"\"\r\n};\r\n","export const sizeOptions = [\r\n  { value: 4, text: \"4x4\" },\r\n  { value: 6, text: \"6x6\" },\r\n  { value: 10, text: \"10x10\" }\r\n];\r\nexport const complexityOptions = [\r\n  { value: 3, text: \"beginner\" },\r\n  { value: 4, text: \"middle\" },\r\n  { value: 5, text: \"expert\" }\r\n];\r\n","import React, { Component } from \"react\";\r\nimport \"./SettingsForm.css\";\r\nimport BaseSelect from \"../baseSelect/BaseSelect\";\r\nimport { sizeOptions, complexityOptions } from \"./suggestedOptions\";\r\n\r\nclass SettingsForm extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      name: \"\",\r\n      size: 4,\r\n      complexity: 3\r\n    };\r\n  }\r\n\r\n  handleChange = event =>\r\n    this.setState({ [event.target.id]: event.target.value });\r\n\r\n  handleSubmit = () => {\r\n    // eslint-disable-next-line\r\n    console.log(\"change settings\");\r\n  };\r\n\r\n  render() {\r\n    const { name, size, complexity } = this.state;\r\n\r\n    return (\r\n      <form className=\"SettingsForm\">\r\n        <h3>Preferences</h3>\r\n\r\n        <label className=\"SettingsForm__preferencesElement\" htmlFor=\"name\">\r\n          <span>name:</span>\r\n          <input\r\n            className=\"SettingsForm__input\"\r\n            type=\"text\"\r\n            id=\"name\"\r\n            placeholder=\"your name\"\r\n            value={name}\r\n            onChange={this.handleChange}\r\n          />\r\n        </label>\r\n        <BaseSelect\r\n          id=\"size\"\r\n          value={+size}\r\n          handleChange={event => this.handleChange(event)}\r\n          options={sizeOptions}\r\n          labelName=\"select game size:\"\r\n        />\r\n        <BaseSelect\r\n          id=\"complexity\"\r\n          value={+complexity}\r\n          handleChange={event => this.handleChange(event)}\r\n          options={complexityOptions}\r\n          labelName=\"select game complexity:\"\r\n        />\r\n        <div>\r\n          <button type=\"button\" onClick={this.handleSubmit}>\r\n            Set preferences\r\n          </button>\r\n        </div>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SettingsForm;\r\n","import React, { Component } from \"react\";\r\nimport SettingsForm from \"../../components/settingsForm/SettingsForm\";\r\nimport \"./Settings.css\";\r\n\r\nclass Settings extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"Settings\">\r\n        <SettingsForm />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Settings;\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"./Game.css\";\r\nimport classNames from \"classnames\";\r\n\r\nclass Game extends Component {\r\n  componentDidMount() {\r\n    this.createNewGame();\r\n  }\r\n\r\n  createNewGame = () => {\r\n    const { size, list, createGame } = this.props;\r\n    createGame(size, list);\r\n  };\r\n\r\n  render() {\r\n    const { source, selectDog, selectedDogs, game } = this.props;\r\n    const boxElem = source.map((el, index) => {\r\n      const dogClass = classNames(\"Game__boxElem\", {\r\n        Game__boxElem_inactive: !el.isActive,\r\n        Game__boxElem_selected:\r\n          selectedDogs.length !== 0 && selectedDogs[0].id === el.id\r\n      });\r\n      return (\r\n        <div\r\n          key={`${el.image}_${index.toString()}`}\r\n          className={dogClass}\r\n          role=\"button\"\r\n          onClick={() => selectDog(el, game)}\r\n          onKeyUp={() => {}}\r\n          tabIndex=\"-1\"\r\n        >\r\n          <img className=\"Game__boxImage\" src={el.image} alt=\"dog\" />\r\n        </div>\r\n      );\r\n    });\r\n\r\n    return (\r\n      <div className=\"Game\">\r\n        <div className=\"Game__moveDescription\">\r\n          <p>\r\n            <span className=\"Game__description\">conditions: </span>You need to\r\n            find dogs of the same breed\r\n          </p>\r\n          <p>\r\n            <span className=\"Game__description\">selected breed: </span>\r\n            {selectedDogs.length !== 0\r\n              ? selectedDogs[0].breed\r\n              : \"nothing selected\"}\r\n          </p>\r\n          <p>\r\n            <span className=\"Game__description\">score: </span>\r\n            {game.score}\r\n          </p>\r\n          <div className=\"Game__navigation\">\r\n            <button\r\n              type=\"button\"\r\n              className=\"Game__buttonNew\"\r\n              onClick={this.createNewGame}\r\n            >\r\n              Start another game\r\n            </button>\r\n          </div>\r\n        </div>\r\n        <div className=\"Game__area\">{boxElem}</div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nGame.propTypes = {\r\n  createGame: PropTypes.func.isRequired,\r\n  selectDog: PropTypes.func.isRequired,\r\n  selectedDogs: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n  list: PropTypes.objectOf(\r\n    PropTypes.oneOfType([PropTypes.string, PropTypes.arrayOf(PropTypes.string)])\r\n  ).isRequired,\r\n  source: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      breed: PropTypes.string,\r\n      image: PropTypes.string\r\n    })\r\n  ).isRequired,\r\n  size: PropTypes.number.isRequired,\r\n  game: PropTypes.object.isRequired\r\n};\r\n\r\nexport default Game;\r\n","const randomInteger = max => {\r\n  let random = Math.random() * max;\r\n  random = Math.floor(random);\r\n  return random;\r\n};\r\n\r\nexport const createRandomBreeds = (size, arr) => {\r\n  const randomArr = new Array(size ** 2 / 2).fill(true);\r\n  const result = [];\r\n  randomArr.forEach(() => {\r\n    const randomIndex = randomInteger(arr.length);\r\n    result.push(arr[randomIndex]);\r\n  });\r\n\r\n  return result;\r\n};\r\n\r\nexport const createGameQuery = arrBreeds => {\r\n  const query = arrBreeds.map(breed => {\r\n    const params = {\r\n      source: \"breedRandom\",\r\n      exactly: breed,\r\n      amount: 2\r\n    };\r\n    return params;\r\n  });\r\n  return query;\r\n};\r\n\r\nexport const createRandomSource = arr =>\r\n  arr.flatMap(el => el.message.map(img => ({ breed: el.exactly, image: img })));\r\n\r\nexport const shuffleSource = arr => {\r\n  const result = arr;\r\n  if (arr !== undefined) {\r\n    for (let i = 0; i < result.length; i += 1) {\r\n      const el = result[i];\r\n      const randomInd = randomInteger(result.length);\r\n      result[i] = result[randomInd];\r\n      result[randomInd] = el;\r\n    }\r\n    for (let i = 0; i < result.length; i += 1) {\r\n      result[i].id = i;\r\n      result[i].isActive = true;\r\n    }\r\n  }\r\n  return result;\r\n};\r\n","import * as types from \"./actionTypes\";\r\n\r\nexport const createNewGame = () => ({\r\n  type: types.CREATE_NEW_GAME\r\n});\r\n\r\nexport const createGameSuccess = result => ({\r\n  type: types.CREATE_GAME_SUCCESS,\r\n  result\r\n});\r\n\r\nexport const createGameFail = error => ({\r\n  type: types.CREATE_GAME_FAIL,\r\n  error\r\n});\r\n\r\nexport const finishGame = score => ({\r\n  type: types.FINISH_GAME,\r\n  score\r\n});\r\n\r\nexport const nextMoveGame = (selectedDogs, newInActiveDogs, score) => ({\r\n  type: types.NEXT_MOVE_GAME,\r\n  selectedDogs,\r\n  newInActiveDogs,\r\n  score\r\n});\r\n","import { defineUrl } from \"../../helpers/defineUrl\";\r\nimport {\r\n  createRandomBreeds,\r\n  createGameQuery,\r\n  createRandomSource,\r\n  shuffleSource\r\n} from \"./gameHelper\";\r\nimport {\r\n  createNewGame,\r\n  createGameSuccess,\r\n  createGameFail\r\n} from \"../../actions/game\";\r\n\r\nconst createGame = (size, list) => async dispatch => {\r\n  if (Object.keys(list).length > 0) {\r\n    dispatch(createNewGame());\r\n    const gameBreeds = createRandomBreeds(size, Object.keys(list));\r\n    const gameQuery = createGameQuery(gameBreeds);\r\n    const urls = gameQuery.map(query => defineUrl(query));\r\n    try {\r\n      const arr = await Promise.all(\r\n        urls.map(url => {\r\n          const message = fetch(url)\r\n            .then(resp => resp.json())\r\n            .then(result => result)\r\n            .catch(error => {\r\n              // eslint-disable-next-line\r\n              console.log(\"error\", error);\r\n            });\r\n          return message;\r\n        })\r\n      );\r\n      arr.forEach((el, index) => {\r\n        Object.assign(gameQuery[index], el);\r\n      });\r\n      const result = createRandomSource(gameQuery);\r\n      const shuffleResult = shuffleSource(result);\r\n      dispatch(createGameSuccess(shuffleResult));\r\n    } catch (error) {\r\n      dispatch(createGameFail(error));\r\n    }\r\n  }\r\n};\r\n\r\nexport default createGame;\r\n","import { nextMoveGame, finishGame } from \"../../actions/game\";\r\n\r\nconst gameMove = (dog, game) => dispatch => {\r\n  if (game.selectedDogs.length === 0) {\r\n    const newSelectedDogs = [dog];\r\n    return dispatch(nextMoveGame(newSelectedDogs, [], game.score));\r\n  }\r\n  const dog0 = game.selectedDogs[0];\r\n  const isMatch = dog.breed === dog0.breed && dog.id !== dog0.id;\r\n  if (!isMatch) {\r\n    return dispatch(nextMoveGame([], [], game.score));\r\n  }\r\n  const newDog0 = Object.assign({}, dog0);\r\n  const newDog = Object.assign({}, dog);\r\n  newDog0.isActive = false;\r\n  newDog.isActive = false;\r\n  const newScore = game.score + 2;\r\n  const isGameOver = game.source.filter(el => el.isActive).length === 2;\r\n  if (isGameOver) {\r\n    return dispatch(finishGame(newScore));\r\n  }\r\n  return dispatch(nextMoveGame([], [newDog0, newDog], newScore));\r\n};\r\nexport default gameMove;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Game from \"../components/game/Game\";\r\nimport createGame from \"../components/game/gameCreator\";\r\nimport gameMove from \"../components/game/gameMove\";\r\n\r\nconst GameContainer = props => <Game {...props} />;\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    createGame: (size, list) => dispatch(createGame(size, list)),\r\n    selectDog: (dog, game) => dispatch(gameMove(dog, game))\r\n  };\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  list: state.dogs.list,\r\n  size: state.game.size,\r\n  game: state.game,\r\n  source: state.game.source,\r\n  selectedDogs: state.game.selectedDogs\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(GameContainer);\r\n","import React from \"react\";\r\nimport { Switch, Route } from \"react-router-dom\";\r\nimport Main from \"../../pages/main/Main\";\r\nimport Settings from \"../../pages/settings/Settings\";\r\nimport GameContainer from \"../../containers/GameContainer\";\r\n\r\nconst AppRouter = () => (\r\n  <Switch>\r\n    <Route path=\"/game\" exact component={GameContainer} />\r\n    <Route path=\"/settings\" component={Settings} />\r\n    <Route path=\"/\" exact component={Main} />\r\n  </Switch>\r\n);\r\nexport default AppRouter;\r\n","import React from \"react\";\r\nimport \"./NavigationPanel.css\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport default function NavigationPanel({ links }) {\r\n  const linksList = links.map(link => (\r\n    <li className=\"NavigationPanel__item\" key={`${link.path}`}>\r\n      <Link className=\"NavigationPanel__link\" to={link.path}>\r\n        {link.name}\r\n      </Link>\r\n    </li>\r\n  ));\r\n  return (\r\n    <nav className=\"NavigationPanel\">\r\n      <ul className=\"NavigationPanel__list\">{linksList}</ul>\r\n    </nav>\r\n  );\r\n}\r\nNavigationPanel.propTypes = {\r\n  links: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      path: PropTypes.string,\r\n      name: PropTypes.string\r\n    })\r\n  ).isRequired\r\n};\r\n","import React from \"react\";\r\nimport \"./App.css\";\r\nimport AppRouter from \"./components/router/AppRouter\";\r\nimport NavigationPanel from \"./components/navigationPanel/NavigationPanel\";\r\nimport { links } from \"./components/navigationPanel/navigationRoutes\";\r\n\r\nexport default function App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <header className=\"App__header\">\r\n        <NavigationPanel links={links} />\r\n      </header>\r\n      <main className=\"App__main\">\r\n        <AppRouter />\r\n      </main>\r\n      <footer className=\"App__footer\" />\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Provider } from \"react-redux\";\r\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\r\nimport { fetchDogs } from \"../actions/dogs\";\r\n\r\nimport App from \"../App\";\r\n\r\nconst Root = ({ store }) => {\r\n  store.dispatch(\r\n    fetchDogs({\r\n      source: \"list\",\r\n      exactly: \"\",\r\n      amount: null\r\n    })\r\n  );\r\n  return (\r\n    <Provider store={store}>\r\n      <Router>\r\n        <Route path=\"/\" component={App} />\r\n      </Router>\r\n    </Provider>\r\n  );\r\n};\r\n\r\nRoot.propTypes = {\r\n  store: PropTypes.shape({\r\n    dogs: PropTypes.any,\r\n    game: PropTypes.any,\r\n    user: PropTypes.any\r\n  }).isRequired\r\n};\r\n\r\nexport default Root;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { createStore, applyMiddleware } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport logger from \"redux-logger\";\r\nimport allReducers from \"./reducers\";\r\nimport \"./index.css\";\r\nimport Root from \"./containers/Root\";\r\n\r\nconst store = createStore(allReducers, applyMiddleware(thunk, logger));\r\n\r\nReactDOM.render(<Root store={store} />, document.getElementById(\"root\"));\r\n\r\nexport default store;\r\n"],"sourceRoot":""}